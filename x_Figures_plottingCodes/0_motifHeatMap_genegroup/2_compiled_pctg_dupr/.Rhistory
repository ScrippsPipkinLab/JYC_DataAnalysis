library(Seurat)
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Save features.tsv to genes.tsv
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = pbmc, pattern = "^MT-")
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = sc, pattern = "^MT-")
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
VlnPlot(object = sc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
str(sc)
VlnPlot(object = sc, features = c( "nCount_RNA", "percent.mt"))
sc <- NormalizeData(sc, normalization.method = "LogNormalize", scale.factor = 10000)
head(sc.data)
tail(sc.data)
str(sc.data)
sc.data[c("CD25KO_TotalA","CD25WT_TotalA","EndoNAV_TotalA","P14NAV_TotalA"), 1:30]
head(sc.data)
str(sc.data)
sc.data$i
sc.data@i
sc.data@Dim
sc.data@Dimnames
str(sc.data)
str(sc.data@Dimnames)
sc.data@Dimnames[0]
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
BiocManager::install("MEDIPS", version = "3.8")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
library(ggplot2)
library(dplyr)
libray(magrittr)
library(magrittr)
library(ggrepel)
tsne.real = read.csv("https://docs.google.com/uc?id=1KArwfOd5smzuCsrpgW9Xpf9I06VOW4ga&export=download")
info.real = tsne.real
ggplot(tsne.real, aes(x = tsne1, y = tsne2)) + geom_point(alpha = 0.1) +
theme_bw()
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
library(igraph)
library(FNN)
install.packages("FNN")
library(FNN)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
library(igraph)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
info.real$louvain = as.factor(membership(lc.real))
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
browseVignettes("DESeq2")
packageVersion("DESeq2")
DESmat<-DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
#---- Read input file
DeseqData <- read.csv(count.file,header=TRUE, row.names=1)
#---- Meta data
DeseqDesign <- data.frame(row.names=rownames,condition=as.factor(conds))
#---- Generate DEseq matrix
DESmat <- DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("yaml")
########## Imports ##########
library(DEseq2)
library(DEseq2)
BiocManager::install("DESeq2")
install.packages("RcppArmadillo")
library(DEseq2)
library(DEseq2)
install.packages("Rcpp","RcppArmadillo","inline","rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
########## Imports ##########
library(igraph)
library(FNN)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(magrittr)
library("clusterProfiler")
#BiocManager::install("org.Mm.eg.db")
library("org.Mm.eg.db")
install.packages(c("dplyr", "tidyverse"))
BiocManager::install("TCGAbiolinks")
install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
library(dplyr)
library(tidyverse)
library(TCGAbiolinks)
library(ggplot2)
install.packages(c("BSDA", "pheatmap"))
########## Converted Data analysis ##########
# Author: Huitian (Yolanda) Diao
# May 15th, 2019
# For t-test with percentiles
########## Libraries ##########
library(BSDA)
library(dplyr)
library(tidyverse)
library(magrittr)
library(pheatmap)
library(RColorBrewer)
library(dplyr)
library(tidyverse)
library(TCGAbiolinks)
########## Self-defined functions ##########
########## Main ##########
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
tgt.genes <- tgt.tb$GeneID
tgt.genes.uppder <- toupper(tgt.genes)
tgt.genes.uppder
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
tgt.genes <- tgt.tb$GeneID
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use.txt"
biogrid.tb <- read_csv(biogrid.ref, delim="\t")
biogrid.tb <- read_csv(biogrid.ref, "\t")
head(biogrid.tb)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$GeneID
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
nrow(biogrid.tb)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
install.packages(maftools)
install.packages("maftools")
BiocManager::install("maftools")
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
covertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
covertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN <- function(in.vec, cov.old, cov.new){
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(in.vec)
}
convertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
BiocManager::install("MEDIPS")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$GeneID
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
tgt.genes
tgt.genes <- tgt.tb$GeneID
tgt.genes
length(tgt.genes)
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes <- tgt.tb$GeneID
tgt.genes
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval"
setwd(wk.dir)
z.p.file <- "all_z-score_div_sqrt-p_sqrt.csv"
z.p.tb <- read_csv(z.p.file)
#z.p.tb <- z.p.tb %>% column_to_rownames("gene_name")
colnames(z.p.tb)
###----- Find genes that are on top / bottom of list in different cases
#--- Q4 v.s. Q1
z.p.tb <- z.p.tb %>% arrange(Q4minusQ1)
qt <- as.integer(floor(nrow(z.p.tb)/8))
q4_q1_dn <- z.p.tb$gene_name[1: qt]
q4_q1_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
#--- Q3 v.s. Other
z.p.tb <- z.p.tb %>% arrange(Q3minusOther)
qt <- as.integer(floor(nrow(z.p.tb)/8))
q3_o_dn <- z.p.tb$gene_name[1: qt]
q3_o_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
#--- Input v.s. Avg
z.p.tb <- z.p.tb %>% arrange(InputMinusAvg)
qt <- as.integer(floor(nrow(z.p.tb)/8))
in_a_dn <- z.p.tb$gene_name[1: qt]
in_a_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
###----- All genes that are on top / bottom in any case
all.tgt <- c(q4_q1_dn, q4_q1_up, q3_o_dn, q3_o_up, in_a_dn, in_a_up)
all.tgt <- unique(all.tgt)
length(all.tgt)
#####---------- Heatmaps
col.pal <- colorRampPalette(brewer.pal(n=11, name="RdBu"))
col.use <- rev(col.pal(50))
###----- Heatmap of all targets
target.tb <- z.p.tb %>% filter(gene_name %in% all.tgt) %>% column_to_rownames("gene_name")
#target.heatmap <- pheatmap(target.tb , color=col.use, cluster_cols = FALSE,
#                           clustering_distance_rows="canberra")
head(target.tb)
write_csv(target.tb, "target.tb.csv")
nrow(target.tb)
target.tb <- z.p.tb %>% filter(gene_name %in% all.tgt)
write_csv(target.tb, "target.tb.csv")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.tb.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$GeneID
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
tgt.genes <- tgt.tb$gene_name
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
head(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper) %>%
filter(OFFICIAL_SYMBOL_B %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
head(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb.tgt %>%
distinct()
nrow(biogrid.tb.tgt)
write_csv(biogrid.tb.tgt, "CRF_target_biogrid.csv")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$gene_name
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper) %>%
filter(OFFICIAL_SYMBOL_B %in% tgt.genes.lower.upper)
biogrid.tb.tgt <- biogrid.tb.tgt %>%
distinct()
nrow(biogrid.tb.tgt)
colnames(biogrid.tb.tgt)
tgt.tb <- tgt.tb %>% mutate(gene_name = toupper(gene_name))
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
colnames(tgt.tb)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = toupper(gene_name))
colnames(tgt.tb)
colnames(crf.gn.alt.tb)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
colnames(crf.gn.alt.tb)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
colnames(tgt.tb)
colnames(biogrid.tb)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name)
nrow(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct()
nrow(biogrid.tb.tgt)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by=gene_name)
colnames(tgt.tb)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(gene_name = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(gene_name2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(gene_name, gene_name2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(tgt.tb)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(gene_name %in% tgt.tb$gene_name) %>%
filter(gene_name2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(tgt.tb)
colnames(biogrid.tb.tgt)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(gene_name = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(gene_name2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(gene_name, gene_name2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(gene_name %in% tgt.tb$gene_name) %>%
filter(gene_name2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name") %>%
mutate(interation="pp")
write_csv(biogrid.tb.tgt, "CRF_target_biogrid.csv")
wk.dir <- "/Volumes/Yolanda/jycATAC/JYC_DataAnalysis/x_Figures_plottingCodes/0_motifHeatMap_genegroup/2_compiled_pctg_dupr"
setwd(wk.dir)
files <- list.files(path=wk.dir, pattern="*.txt", full.names=FALSE, recursive=FALSE)
files
#################### Main ####################
wk.dir <- "/Volumes/Yolanda/jycATAC/JYC_DataAnalysis/x_Figures_plottingCodes/0_motifHeatMap_genegroup/2_compiled_pctg_dupr"
setwd(wk.dir)
files <- list.files(path=wk.dir, pattern="*.csv", full.names=FALSE, recursive=FALSE)
files
source('/Volumes/Yolanda/jycATAC/JYC_DataAnalysis/x_Figures_plottingCodes/0_motifHeatMap_genegroup/plot_motifHeatMap_TFenrichment_combined_motifs.r')
