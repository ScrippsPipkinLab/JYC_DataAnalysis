scale_x_reverse() +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_reverse() +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_reverse(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(8, -8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
x.name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
file.name.no.path.vec <- unlist(strsplit(file.name.no.path, "__"))
RNA.comparison <- tail( file.name.no.path.vec, n=1)
RNA.comparison <- gsub("RNA.", "", RNA.comparison)
RNA.comparison <- gsub(".csv", "", RNA.comparison)
RNA.comparison <- gsub("\\.", " v.s. ", RNA.comparison)
R1 <- unlist(strsplit(RNA.comparison, " v.s. "))[1]
R2 <- unlist(strsplit(RNA.comparison, " v.s. "))[2]
x.name <- paste(RNA.comparison, "log2FC", sep=" ")
x.name <- paste(x.name, "(postivie value: ", R1, ">", R2, ")", sep="")
x.name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
file.name.no.path.vec <- unlist(strsplit(file.name.no.path, "__"))
RNA.comparison <- tail( file.name.no.path.vec, n=1)
RNA.comparison <- gsub("RNA.", "", RNA.comparison)
RNA.comparison <- gsub(".csv", "", RNA.comparison)
RNA.comparison <- gsub("\\.", " v.s. ", RNA.comparison)
R1 <- unlist(strsplit(RNA.comparison, " v.s. "))[1]
R2 <- unlist(strsplit(RNA.comparison, " v.s. "))[2]
x.name <- paste(RNA.comparison, "log2FC", sep=" ")
x.name <- paste(x.name, "  (postivie value: ", R1, ">", R2, ")", sep="")
x.name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
file.name.no.path.vec <- unlist(strsplit(file.name.no.path, "__"))
RNA.comparison <- tail( file.name.no.path.vec, n=1)
RNA.comparison <- gsub("RNA.", "", RNA.comparison)
RNA.comparison <- gsub(".csv", "", RNA.comparison)
RNA.comparison <- gsub("\\.", " v.s. ", RNA.comparison)
R1 <- unlist(strsplit(RNA.comparison, " v.s. "))[1]
R2 <- unlist(strsplit(RNA.comparison, " v.s. "))[2]
x.name <- paste(RNA.comparison, "log2FC", sep=" ")
x.name <- paste(x.name, "  (postivie value: ", R1, " > ", R2, ")", sep="")
x.name
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
scale_color_manual(labels = c("Tfh associated", "Th1 associated"), values = c("blue", "red")) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
scale_color_manual(labels = c("Tfh associated", "Th1 associated"), values = c("blue", "red")) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
geom_text(aes(0, 0, label="Tfh associate", color="red")) +
geom_text(aes(0, 0, label="Th1 associate", color="blue")) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
geom_text(aes(5, 5, label="Tfh associate", color="red")) +
geom_text(aes(5, 4, label="Th1 associate", color="blue")) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title) +
scale_x_continuous(limits = c(-8, 8)) +
geom_text(aes(5, 100, label="Tfh associate", color="red")) +
geom_text(aes(5, 4, label="Th1 associate", color="blue")) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes") +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes") +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes") +
scale_x_continuous(limits = c(-8, 8)) +
guides(fill=guide_legend(title=paste(g1," TPM", sep=""))) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", shape=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
out.name <- gsub(".csv", ".png", file.name.no.path)
out.name
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
out.name <- gsub(".csv", ".png", in.file)
out.name
ggsave(bbplot, out.name)
ggsave(out.name, bbplot, device="png")
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
#--- Save
ggsave(out.name, bbplot, device="png", width = 20, height = 20)
ggsave(out.name, bbplot, device="png", width = 7, height = 7, dpi=320)
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
out.name <- gsub(".csv", ".png", in.file)
#--- X lab name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
file.name.no.path.vec <- unlist(strsplit(file.name.no.path, "__"))
RNA.comparison <- tail( file.name.no.path.vec, n=1)
RNA.comparison <- gsub("RNA.", "", RNA.comparison)
RNA.comparison <- gsub(".csv", "", RNA.comparison)
RNA.comparison <- gsub("\\.", " v.s. ", RNA.comparison)
R1 <- unlist(strsplit(RNA.comparison, " v.s. "))[1]
R2 <- unlist(strsplit(RNA.comparison, " v.s. "))[2]
x.name <- paste(RNA.comparison, "log2FC", sep=" ")
x.name <- paste(x.name, "  (postivie value: ", R1, " > ", R2, ")", sep="")
x.name
#--- Figure title
fig.title <- "Genes nearby \n"
atac.name <- file.name.no.path.vec[length(file.name.no.path.vec) - 1]
TF.full <- unlist(strsplit(atac.name, "\\."))[1]
fig.title <- paste(fig.title, TF.full, " motifs \n in regions ", sep="")
updn <- tail(unlist(strsplit(atac.name, "--")), n=1)
updn <- gsub("dn", "less accessible in", updn)
updn <- gsub("up", "more accessible in", updn)
fig.title <- paste(fig.title, updn, sep="")
atat.comparison <- tail(unlist(strsplit(atac.name, "\\.")), n=1)
atat.comparison <- unlist(strsplit(atat.comparison, "--"))[1]
g1 <- unlist(strsplit(atat.comparison, "_vs_"))[1]
g2 <- unlist(strsplit(atat.comparison, "_vs_"))[2]
fig.title <- paste(fig.title, "\n", g1, " than ", g2, sep="")
in.df <- read_csv(in.file)
in.df <- in.df[order(-in.df$log2FC), ]
in.df["G1sqrt"] <- sqrt(in.df$G1)
in.df["Ranks"] <- factor(c(1:nrow(in.df)))
in.df$geneName <- factor(in.df$geneName, levels = in.df$geneName)
dot.col <- c()
dot.size <- c()
dot.name <- c()
for (x in c(1:length(in.df$geneName))){
genex <- as.character(unlist(in.df$geneName))[x]
tpmsqrtx <- unlist(in.df$G1sqrt)[x]
if (genex %in% ref.list1){
dot.col <- c(dot.col, "red")
dot.size <- c(dot.size, tpmsqrtx)
dot.name <- c(dot.name, genex)
}
else if (genex %in% ref.list2){
dot.col <- c(dot.col, "blue")
dot.size <- c(dot.size, tpmsqrtx)
dot.name <- c(dot.name, genex)
}
else {
dot.col <- c(dot.col, "grey")
dot.size <- c(dot.size, 0)
dot.name <- c(dot.name, "")
}
}
in.df["dotcol"] <- dot.col
in.df["dotsize"] <- dot.size
in.df["dotname"] <- dot.name
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
#--- Save
ggsave(out.name, bbplot, device="png", width = 7, height = 7, dpi=320)
source('/Volumes/Huitian/jycATAC/0_codes/1_2_ChIPseeker.R')
wk.dir <- "/Volumes/Huitian/jycATAC/0_codes "
setwd(wk.dir)
wk.dir <- "/Volumes/Huitian/jycATAC/0_codes"
setwd(wk.dir)
### Annotate whole reference file
if (TRUE) {
i <- "jycATAC_merged_peaks.bed"
peakAnno.i <- annotatePeak(i, tssRegion=c(-5000, 5000), TxDb=txdb, annoDb="org.Mm.eg.db")
str(peakAnno.i)
df.peakAnno.i <- as.data.frame(peakAnno.i)
head(df.peakAnno.i)
outname <- paste(i,".anno.csv",sep="")
write.csv(df.peakAnno.i, file = outname)
}
source('/Volumes/Yolanda/JYC_DataAnalysis/z_codes_local/0_4_MACS_peak_gene_summit_sig_plot_nonMerged.R')
library(dplyr)
library(tidyverse)
library(reshape2)
######################################## Self defined functions ########################################
sig_peak_highlight_box <- function(in_file, ts_range, cd_order, gene_name, apdx, exp_window_left, exp_window_right){
window_range <- c((ts_range[1] - (ts_range[2] - ts_range[1])*exp_window_left),  (ts_range[2] + (ts_range[2] - ts_range[1])*exp_window_right))
in_tb <- read_csv(in_file)
in_tb$chr <- NULL
in_tb$se <- paste(in_tb$start, in_tb$end, sep="_")
in_tb$start <- NULL
in_tb$end <- NULL
plot_tb <- melt(data=in_tb, id.vars="se")
colnames(plot_tb) <- c("se", "condition", "val")
plot_tb <- plot_tb %>%  mutate(val = replace_na(val, "none")) %>%
filter(val != "none") %>%
separate(se, c("start", "end"), sep="_")
plot_tb$condition <- factor(plot_tb$condition, levels=cd_order)
plot_tb$cd_num <- as.numeric(plot_tb$condition)
plot_tb$start <- as.numeric(plot_tb$start)
plot_tb$end <- as.numeric(plot_tb$end)
anno_tb <- tibble(cd = factor(cd_order, levels=cd_order))
anno_tb$pos <- (as.numeric(anno_tb$cd) - 1 )*2 + 0.5
anno_x <- ts_range[1] - (ts_range[2] - ts_range[1])*1.2
fill_col <- "red"
if (apdx == "summit") {
fill_col <- "blue"
}
sig_peak_plot <- ggplot() +
geom_rect(data=plot_tb, mapping=aes(xmin=start, xmax=end, ymin=((cd_num-1)*2), ymax=((cd_num-1)*2+1)),
fill=fill_col, alpha=0.5) +
geom_vline(xintercept = ts_range[1], size=0.2, alpha=0.7) +
geom_vline(xintercept = ts_range[2], size=0.2, alpha=0.7) +
scale_x_continuous(limits=window_range) +
scale_y_continuous(limits=c(0, (length(cd_order)*2))) +
geom_text(data = anno_tb, aes(x=anno_x, y=anno_tb$pos, label=anno_tb$cd)) +
xlab(gene_name) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title.y=element_blank(),
axis.title.x = element_text(size = 16),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") )# get rid of legend p
out_name <- paste(gene_name, "_" , apdx, ".pdf", sep="")
ggsave(out_name, plot = sig_peak_plot, device = "pdf",
width = 20, height = 5, units = "cm",bg = "transparent")
}
######################################## Main ########################################
wk.dir <- "/Volumes/Yolanda/JYC_DataAnalysis/2_MACS2/1_xls_combined_p0.1/p_0.01/d150_merged"
setwd(wk.dir)
pos.file <- "/Volumes/Yolanda/JYC_DataAnalysis/z_codes_local/0_1_MACS_peak_find_genes_transcript_loci.csv"
pos.tb <- read_csv(pos.file)
cd_order <- rev(c("WT_Tfh", "Prdm1KO_Tfh", "WT_Th1", "Bcl6KO_Th1", "DKO_Th1", "DKO_Tfh", "Naive"))
#cd_order <- rev(c("WT_Tfh_rep1", "WT_Tfh_rep2", "WT_Tfh_rep3", "Prdm1KO_Tfh_rep1", "Prdm1KO_Tfh_rep2", "Prdm1KO_Tfh_rep3",
#                  "WT_Th1_rep1", "WT_Th1_rep2", "WT_Th1_rep3", "Bcl6KO_Th1_rep1", "Bcl6KO_Th1_rep2", "Bcl6KO_Th1_rep3",
#                  "DKO_Th1_rep1", "DKO_Th1_rep2", "DKO_Th1_rep3", "DKO_Tfh_rep1", "DKO_Tfh_rep2", "DKO_Tfh_rep3",
#                  "Naive_rep1", "Naive_rep2", "Naive_rep3"))
gene.expand.window <- c("Il21", "Tcf7", "Icos", "Cd200", "Tbx21")
for (i in c(1: nrow(pos.tb))) {
gene.i <- pos.tb[i,]$gene_name[1]
start.i <- pos.tb[i,]$start[1]
end.i <- pos.tb[i,]$end[1]
range.i <- c(start.i, end.i)
file.i <- paste(wk.dir, "/merged_", gene.i, "_simp.csv", sep="")
if (gene.i %in% gene.expand.window) {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "peak", 6, 6)
} else if (gene.i == "Klf2") {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "peak", 2, 45)
} else {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "peak", 1.5, 1)
}
file.i <- paste(wk.dir, "/merged_", gene.i, "_summits.csv", sep="")
if (gene.i %in% gene.expand.window) {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "summit", 6, 6)
} else if (gene.i == "Klf2") {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "summit", 2, 45)
} else {
sig_peak_highlight_box(file.i, range.i, cd_order, gene.i, "summit", 1.5, 1)
}
}
source('/Volumes/Yolanda/JYC_DataAnalysis/z_codes_local/0_4_1_MACS_peak_gene_summit_sig_plot_nonMerged.R')
