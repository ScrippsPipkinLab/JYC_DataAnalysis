attach(intab)
newtab<- intab[order(NaiveTPM),]
detach(intab)
newtab$NaiveTPM
infile<-"/Volumes/Huitian/Exp36/0_RNAseqMotifs/Families_genename_add_TPM.csv"
intab<-read.csv(infile, header=TRUE)
intab$NaiveTPM
infile<-"/Volumes/Huitian/Exp36/0_RNAseqMotifs/Families_genename_add_TPM.csv"
intab<-read.csv(infile, header=TRUE)
attach(intab)
intab<- intab[order(NaiveTPM),]
detach(intab)
intab$NaiveTPM
infile<-"/Volumes/Huitian/Exp36/0_RNAseqMotifs/Families_genename_add_TPM.csv"
intab<-read.csv(infile, header=TRUE)
attach(intab)
intab<- intab[order(-NaiveTPM),]
detach(intab)
intab$NaiveTPM
ggplot(data=intab,aes(x=TF,y=NaiveTPM)) +
geom_bar(stat="identity")
ggplot(data=newtab,aes(x=TF,y=NaiveTPM)) +
geom_bar(stat="identity")
infile<-"/Volumes/Huitian/Exp36/0_RNAseqMotifs/Families_genename_add_TPM.csv"
intab<-read.csv(infile, header=TRUE)
attach(intab)
newtab<- intab[order(-NaiveTPM),]
detach(intab)
newtab$NaiveTPM
ggplot(data=newtab,aes(x=TF,y=NaiveTPM)) +
geom_bar(stat="identity")
newtab$NaiveTPM
ggplot(data=newtab,aes(x=newtab$TF,y=newtab$NaiveTPM)) +
geom_bar(stat="identity")
newtab$NaiveTPM
ggplot(data=newtab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity")
NaiveTPMtab <- table(intab$NaiveTPM)
naiveTPMlevels <- names(NaiveTPMtab)[order(-NaiveTPM)]
intab$TF2 <- factor(intab$TF, levels=naiveTPMlevels)
ggplot(data=intab,aes(x=TF2,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_s_discrete(limits=NaiveTPM)
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=NaiveTPM)
positions <- intab$TF
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions)
infile<-"/Volumes/Huitian/Exp36/0_RNAseqMotifs/Families_genename_add_TPM.csv"
intab<-read.csv(infile, header=TRUE)
attach(intab)
intab<- intab[order(-NaiveTPM),]
detach(intab)
positions <- intab$TF
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions)
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions)
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions)
scale_y_sqrt()
positions <- intab$TF
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions)
scale_y_sqrt()
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
palette()
groupColors <- c("purple", "red","orange","yellow","green","blue","cyan", "gray")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#F1C40F", "red","orange","yellow","green","blue","cyan", "gray")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#F1C40F", "#D35400","#2ECC71","#BDC3C7","#34495E","#E74C3C","#1ABC9C", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#F1C40F", "#3498D8","#2ECC71","#BDC3C7","#34495E","#E74C3C","#1ABC9C", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#F1C40F", "#3498D8","#2ECC71","#BDC3C7","#34495E","#E74C3C","#F39C12", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#BDC3C7", "#3498D8","#2ECC71","#BDC3C7","#34495E","#E74C3C","#F39C12", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt()
groupColors <- c("#BDC3C7", "#3498D8","#2ECC71","#BDC3C7","#34495E","#E74C3C","#F39C12", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal()
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkseagreen1","#34495E","#E74C3C","#F39C12", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal()
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkseagreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal()
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkolivegreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal()
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkolivegreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal(panel.grid.major=element_blank(), panel.grid.minor=element_blank())
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkolivegreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal() +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank())
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkolivegreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal() +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(), axis.line=element_list(color="black"))
groupColors <- c("#BDC3C7", "slategray1","wheat1","darkolivegreen1","deepskyblue1","#E74C3C","gold", "#9B59B6")
ggplot(data=intab,aes(x=TF,y=NaiveTPM, fill=Family)) +
geom_bar(stat="identity") +
scale_fill_manual(values=groupColors) +
scale_x_discrete(limits=positions) +
scale_y_sqrt() +
theme_minimal() +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(), axis.line=element_line(color="black"))
install.packages(ggplot2)
install.packages("ggplot2")
curve(  3*x^2 + x, from=1, to=10, n=300, xlab="xvalue", ylab="yvalue",
col="blue", lwd=2, main="Plot of (3x^2 + x)"  )
curve(  0.999^x, from=0, to=1000, n=1000, xlab="xvalue", ylab="yvalue",
col="blue", lwd=2, main="Plot of (0.999^x)"  )
curve(  0.999^x, from=0, to=1000, n=1000,
col="blue", lwd=2, main="Plot of (0.999^x)"  )
curve(  0.999^x, from=0, to=1000, n=1000, xlab=" ", ylab=" ",
col="blue", lwd=2, main="Plot of (0.999^x)"  )
curve(  0.999^x, from=0, to=1000, n=1000, xlab=" ", ylab=" ",
col="blue", lwd=2, main=" "  )
curve(  0.999^x, from=0, to=2000, n=2000, xlab=" ", ylab=" ",
col="blue", lwd=2, main=" "  )
curve(  0.999^x, from=0, to=4000, n=4000, xlab=" ", ylab=" ",
col="blue", lwd=2, main=" "  )
curve(  0.999^x, from=0, to=3000, n=3000, xlab=" ", ylab=" ",
col="blue", lwd=2, main=" "  )
inputab <- read.csv("/Volumes/Huitian/GSE88987_RNAseq/GSE88987_RNAseq/Exp36-DEseq_output/genenamematched/Naive-MEM_Salmon_gn.csv")
inputab
inputab <- read.csv("/Volumes/Huitian/GSE88987_RNAseq/GSE88987_RNAseq/Exp36-DEseq_output/genenamematched/Naive-MEM_Salmon_gn.csv")
inputab$baseMean2 <- inputab$baseMean * 2**inputab$log2FoldChange
inputab$baseMean2
inputabFlt <- subset(inputab, inputab$baseMean>1 & inputab$baseMean2>1)
dim(inputabFlt)
dim(inputab)
inputabFlt <- subset(inputab, inputab$baseMean>10 & inputab$baseMean2>10)
dim(inputabFlt)
dim(inputab)
inputabFlt <- subset(inputab, inputab$baseMean>1 & inputab$baseMean2>1)
inputab <- read.csv("/Volumes/Huitian/GSE88987_RNAseq/GSE88987_RNAseq/Exp36-DEseq_output/genenamematched/Naive-MEM_Salmon_gn.csv")
inputab$baseMean2 <- inputab$baseMean * 2**inputab$log2FoldChange
inputabFlt <- subset(inputab, inputab$baseMean>1 & inputab$baseMean2>1)
inputab <- read.csv("/Volumes/Huitian/GSE88987_RNAseq/GSE88987_RNAseq/Exp36-DEseq_output/genenamematched/Naive-MEM_Salmon_gn.csv")
inputab$nlog10p <- (0-log10(inputab$pvalue))
inputab$baseMean2 <- inputab$baseMean * 2**inputab$log2FoldChange
inputabFlt <- subset(inputab, inputab$baseMean>1 & inputab$baseMean2>1)
inputab$nlog10p
log10(3.47069971197441E-11)
library("swirl")
install.packages("swirl")
library("swirl")
quit()
library("swirl")
swirl()
#biocLite("DiffBind")
library(DiffBind)
biocLite("DiffBind")
biocLite("DiffBind")
source("https://bioconductor.org/biocLite.R")
biocLite("DiffBind")
library(DiffBind)
install.packages("amap")
library(DiffBind)
R.versions()
R.version()
version.R()
R --version
R.version()
R.Version()
R.Version()
source("https://bioconductor.org/biocLite.R")
biocLite("DiffBind")
library(DiffBind)
biocLite("CHIPseeker")
biocLite("ChIPseeker")
library(ChIPseeker)
biocLite("clusterProfiler")
library("clusterProfiler")
install.packages("spp")
libaray(spp)
library(spp)
browseBignette("DiffBind")
browseVignette("DiffBind")
browseVignettes("DiffBind")
library(DEseq2)
library("DEseq2")
install.packages("DEseq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
library(ggplot2)
browseVignettes("DiffBind")
browseVignettes("DiffBind")
count<-0
for (i in c(1:10000)){
while(count<=500){
if(sum(i/1:i==i%/%1:i)==2){
print(i)
count<-count+1
}
}
}
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
in.df <- read.csv("counts.c60.csv")
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
breaksList = seq(0, 2000, by = 20)
breaksList = lapply(breaksList, log2())
breaksList
breaksList <- seq(0, 2000, by = 20)
breaksList <- lapply(breaksList, log2())
breaksList
breaksList <- seq(0, 2000, by = 20)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 2000, by = 20)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 2000000, by = 20)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 2000000, by = 200)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 2000000, by = 2000)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 100, by = 10)
breaksList <- log2(breaksList)
breaksList
breaksList <- seq(1, 100, by = 5)
breaksList <- log2(breaksList)
breaksList
breaksList <- 200*breakList
breaksList <- 200*(breakList)
breaksList <- 200*(breaksList)
breaksList
in.df <- read.csv("counts_c60.csv")
head(in.df)
in.df.data <- in.df[c(5:15)]
head(in.df.data)
out <- pheatmap(in.df.data,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(length(breaksList)) # Defines the vector of colors for the legend (it has to be of the same lenght of breaksList))
)
in.df.data.log <- log(in.df.data+1)
head(in.df.data.log)
out <- pheatmap(in.df.data.log)
save_pheatmap_pdf(out, "counts_c60.pdf")
########## Main ##########
setwd("/Volumes/Huitian/SANY/CHIP/DiffBind")
in.df <- read.csv("counts_c60.csv")
head(in.df)
in.df.data <- in.df[c(5:12)]
in.df.data.log <- log(in.df.data+1)
head(in.df.data.log)
out <- pheatmap(in.df.data.log)
save_pheatmap_pdf(out, "counts_c60.pdf")
head(in.df)
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
head(in.df)
head(in.df)
avg.data.df <- cbind(avg(in.df[c(8,9,10)]), avg(in.df[c(11,12)], avg(in.df[c(13,14,15)])))
avg.data.df <- cbind(average(in.df[c(8,9,10)]), average(in.df[c(11,12)], average(in.df[c(13,14,15)])))
avg.data.df <- cbind(mean(in.df[c(8,9,10)]), mean(in.df[c(11,12)], mean(in.df[c(13,14,15)])))
avg.data.df <- cbind(mean(in.df[c(8,9,10)]), mean(in.df[c(11,12)]), mean(in.df[c(13,14,15)]))
head(in.df[c(8,9,10)])
rowMeans(in.df[c(8,9,10)])
avg.data.df <- cbind(rowMean(in.df[c(8,9,10)]), rowMean(in.df[c(11,12)]), rowMean(in.df[c(13,14,15)]))
avg.data.df <- cbind(rowMeans(in.df[c(8,9,10)]), rowMeans(in.df[c(11,12)]), rowMeans(in.df[c(13,14,15)]))
head(in.df[c(8,9,10)])
head(in.df[c(11,12)])
head(in.df[c(13,14,15)])
colnames(avg.data.df) <- c("EZH2", "YAP", "YYP")
head(avg.data.df)
avg.data.log <- log(avg.data.df+1)
setwd("/Volumes/Huitian/SANY/CHIP/DiffBind")
in.df <- read.csv("counts_c60.csv")
head(in.df)
head(in.df[c(8,9,10)])
head(in.df[c(11,12)])
head(in.df[c(13,14,15)])
avg.data.df <- cbind(rowMeans(in.df[c(8,9,10)]), rowMeans(in.df[c(11,12)]), rowMeans(in.df[c(13,14,15)]))
colnames(avg.data.df) <- c("EZH2", "YAP", "YYP")
head(avg.data.df)
avg.data.log <- log(avg.data.df+1)
out <- pheatmap(avg.data.log)
save_pheatmap_pdf(out, "counts_c60.pdf")
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
out <- pheatmap(avg.data.log, cluster_cols = FALSE, clustering_distance_rows = "correlation", cutree_rows = 5)
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
source('/Volumes/Huitian/SANY/3_3_Heatmap.r')
library(swirl)
library("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
install_course("Data Analysis")
source("http://wush978.github.io/R/init-swirl.R")
swirl()
swirl()
source("https://bioconductor.org/biocLite.R")
biocLite("ChIPQC")
library(ChIPQC)
library(ggplot2)
update.packages(rlang)
update.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(rlang)
install.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages(MEDIPS)
install.packages("MEDIPS")
library(ggplot2)
library(ChIPQC)
library(ChIPseeker)
library(clusterProfiler)
library(DEseq2)
library(DESeq2)
library(ChIPQC)
########## TFcontrolledregionPathway ##########
# Author: Huitian (Yolanda) Diao
# Nov 12th, 2018
########## Prerequisites ##########
# Dependencies:
# - 1. bed files <- 3_2_slicebed_multi.py
# - 2. seperate merged peaks by TF <- fc_TFpeak_sep.sh
# - 3. merged peaks TF annotation <- 4_0.0.7_homer.motif.finding_annoMergedPeaks.sh
# - 4. peak merging <- Homer
# ... etc.
########## libraries ##########
### Install dependencies
#source ("https://bioconductor.org/biocLite.R")
#biocLite("org.Hs.eg.db")
#biocLite("TxDb.Hsapiens.UCSC.hg38.knownGene")
#BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene", version = "3.8")
#BiocManager::install("org.Mm.eg.db", version = "3.8")
### Load libraries
library("ChIPseeker") # For peak annotation
library("GenomicFeatures") # For creating reference file
library(ReactomePA)
library("clusterProfiler")
#library("org.Hs.eg.db")
#library("TxDb.Hsapiens.UCSC.hg38.knownGene")
library("org.Mm.eg.db")
library("TxDb.Mmusculus.UCSC.mm10.knownGene")
library("ggplot2")
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
#library('TxDb.Hsapiens.UCSC.hg38.lincRNAsTranscripts')
#lincRNA_txdb=TxDb.Hsapiens.UCSC.hg38.lincRNAsTranscripts
mm10.refseq.db <- makeTxDbFromUCSC(genome="mm10", tablename="knownGene")
########## Self-defined functions ##########
pathway <- function(indir, basedir, i){
#indir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/up"
#basedir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT-Tfh_vs_Naive--up"
#i <- "AP-1_bZIP--ThioMac-PU.1-ChIP-Seq_GSE21512/all.df.numx.c5-STAT4_WT_Tfh_vs_Naive-pval-0.05_up.bed"
setwd(indir)
peakAnno.i <- annotatePeak(i, tssRegion=c(-5000, 5000), TxDb=txdb, annoDb="org.Mm.eg.db")
df.peakAnno.i <- as.data.frame(peakAnno.i)
outnamebase <- unlist(strsplit(i, "/"))
outnamebase <- head(outnamebase, n=1)
print(outnamebase)
genes.i <- as.data.frame(peakAnno.i)$ENSEMBL
egoBP <- enrichGO(gene = genes.i, keyType = 'ENSEMBL', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoCC <- enrichGO(gene = genes.i, keyType = 'ENSEMBL', OrgDb = org.Mm.eg.db, ont = "CC", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoMF <- enrichGO(gene = genes.i, keyType = 'ENSEMBL', OrgDb = org.Mm.eg.db, ont = "MF", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
setwd(basedir)
outnameanno <- paste(outnamebase,".anno.csv",sep="")
write.csv(df.peakAnno.i, file = outnameanno)
write.csv(egoBP@result, file = paste(outnamebase,"_BP.csv",sep=""))
write.csv(egoCC@result, file = paste(outnamebase,"_CC.csv",sep=""))
write.csv(egoMF@result, file = paste(outnamebase,"_MF.csv",sep=""))
egoBP.dotplot <- dotplot(egoBP, showCategory=25)
ggsave(paste(outnamebase,"_BP_dotplot.pdf",sep=""), egoBP.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
egoCC.dotplot <- dotplot(egoCC, showCategory=25)
ggsave(paste(outnamebase,"_CC_dotplot.pdf",sep=""), egoCC.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
egoMF.dotplot <- dotplot(egoMF, showCategory=25)
ggsave(paste(outnamebase,"_MF_dotplot.pdf",sep=""), egoMF.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
updir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/dn"
outdir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT-Tfh_vs_Naive--dn"
setwd(updir)
file.list <- list.files(pattern = "all.df.numx.c5-WT_Tfh_vs_Naive-pval-0.05_dn.bed$", recursive = TRUE)
file.list
file.list[10:44]
updir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/dn"
outdir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT-Tfh_vs_Naive--dn"
setwd(updir)
file.list <- list.files(pattern = "all.df.numx.c5-WT_Tfh_vs_Naive-pval-0.05_dn.bed$", recursive = TRUE)
file.list[10:44]
for (filex in file.list){
print(filex)
pathway(updir, outdir, filex)
}
### WT-Tfh v.s. WT-Th1 upregulated
if (TRUE) {
updir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/up"
outdir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT-Tfh_vs_Naive--up"
setwd(updir)
file.list <- list.files(pattern = "all.df.numx.c5-WT_Tfh_vs_WT_Th1-pval-0.05_up.bed$", recursive = TRUE)
for (filex in file.list){
print(filex)
pathway(updir, outdir, filex)
}
}
updir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/up"
outdir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT-Tfh_vs_Naive--up"
setwd(updir)
file.list <- list.files(pattern = "all.df.numx.c5-WT_Tfh_vs_Naive-pval-0.05_up.bed$", recursive = TRUE)
file.list
file.list[1:5]
source('/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFcontrolledregionPathway.R')
updir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/dn"
outdir <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/WT_Tfh_vs_WT_Th1--dn"
setwd(updir)
file.list <- list.files(pattern = "all.df.numx.c5-WT_Tfh_vs_WT_Th1-pval-0.05_dn.bed$", recursive = TRUE)
file.list
